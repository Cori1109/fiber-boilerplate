version: '3.7'

#services describe the containers that will start
services:
  # api is the container name for our Go API
  api:
    # It will look for a Dockerfile in the project root and build it
    build: "."
    # Exposes the port 1421 from a container and binds it to a random port
    ports:
      - "1421:1421"
    # If the container goes down, it will restart
    restart: "always"
    command: tail -f /dev/null
    # Connects the API to a common api.network bridge
    # Starts up 5 replicas of the same image
    # deploy:
    #  replicas: 5
  # nginx container
  nginx:
    # specifies the latest nginx image
    image: nginx:latest
    # Connects the conf file of the container to the conf file in our folder
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    # It will start up the nginx only when all api containers have started
    depends_on:
      - api
    # Connects the port 80 of the nginx container to localhost:80 or localhost
    ports:
      - "8080:8080"
  redis:
    image: redis:alpine
    container_name: redis
    hostname: redis
  mariadb:
    image: mariadb:latest
    container_name: mariadb
    hostname: mariadb
    volumes:
      - ./backup:/backup
    ports:
      - 3307:3306
    environment:
      - MYSQL_ROOT_PASSWORD=root
  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    container_name: rabbitmq
    ports:
      # Management port
      - "15672:15672"
      # Service port
      - "5672:5672"
networks:
  default:
    name: fiber-boilerplate